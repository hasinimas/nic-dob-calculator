{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HASINI\\\\Desktop\\\\HTML\\\\my\\\\nic-dob-calculator\\\\src\\\\components\\\\travel\\\\TravelQuiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport TravelResult from \"./TravelResult\";\nimport \"..\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TravelQuiz() {\n  _s();\n  const [step, setStep] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [showResult, setShowResult] = useState(false);\n\n  // Quiz questions\n  const questions = [{\n    id: \"style\",\n    text: \"What’s your travel style?\",\n    options: [\"🌴 Relaxation\", \"🗺 Adventure\", \"🏛 Culture\", \"🎉 Party\"]\n  }, {\n    id: \"companion\",\n    text: \"Who do you travel with?\",\n    options: [\"👤 Solo\", \"❤️ Partner\", \"👨‍👩‍👧 Family\", \"👯 Friends\"]\n  }, {\n    id: \"setting\",\n    text: \"Pick your dream setting:\",\n    options: [\"🏖 Beach\", \"🏔 Mountains\", \"🌆 City\", \"🌲 Forest\"]\n  }, {\n    id: \"pace\",\n    text: \"Your pace of travel?\",\n    options: [\"🐢 Slow & mindful\", \"🚴 Active\", \"🛍 Easygoing\", \"📸 Fast-track\"]\n  }];\n\n  // Handle answer\n  const handleAnswer = option => {\n    const q = questions[step];\n    setAnswers({\n      ...answers,\n      [q.id]: option\n    });\n    if (step < questions.length - 1) {\n      setStep(step + 1);\n    } else {\n      setShowResult(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: !showResult ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: questions[step].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-grid\",\n        children: questions[step].options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"option-btn\",\n          onClick: () => handleAnswer(opt),\n          children: opt\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        children: [\"Question \", step + 1, \" of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TravelResult, {\n      answers: answers,\n      onClose: () => window.location.reload()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(TravelQuiz, \"d1e9ps1sYZCxFM+cFoo1nT0erfY=\");\n_c = TravelQuiz;\nvar _c;\n$RefreshReg$(_c, \"TravelQuiz\");","map":{"version":3,"names":["React","useState","TravelResult","jsxDEV","_jsxDEV","TravelQuiz","_s","step","setStep","answers","setAnswers","showResult","setShowResult","questions","id","text","options","handleAnswer","option","q","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","opt","idx","onClick","onClose","window","location","reload","_c","$RefreshReg$"],"sources":["C:/Users/HASINI/Desktop/HTML/my/nic-dob-calculator/src/components/travel/TravelQuiz.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport TravelResult from \"./TravelResult\";\r\nimport \"..\";\r\n\r\nexport default function TravelQuiz() {\r\n  const [step, setStep] = useState(0);\r\n  const [answers, setAnswers] = useState({});\r\n  const [showResult, setShowResult] = useState(false);\r\n\r\n  // Quiz questions\r\n  const questions = [\r\n    {\r\n      id: \"style\",\r\n      text: \"What’s your travel style?\",\r\n      options: [\"🌴 Relaxation\", \"🗺 Adventure\", \"🏛 Culture\", \"🎉 Party\"],\r\n    },\r\n    {\r\n      id: \"companion\",\r\n      text: \"Who do you travel with?\",\r\n      options: [\"👤 Solo\", \"❤️ Partner\", \"👨‍👩‍👧 Family\", \"👯 Friends\"],\r\n    },\r\n    {\r\n      id: \"setting\",\r\n      text: \"Pick your dream setting:\",\r\n      options: [\"🏖 Beach\", \"🏔 Mountains\", \"🌆 City\", \"🌲 Forest\"],\r\n    },\r\n    {\r\n      id: \"pace\",\r\n      text: \"Your pace of travel?\",\r\n      options: [\"🐢 Slow & mindful\", \"🚴 Active\", \"🛍 Easygoing\", \"📸 Fast-track\"],\r\n    },\r\n  ];\r\n\r\n  // Handle answer\r\n  const handleAnswer = (option) => {\r\n    const q = questions[step];\r\n    setAnswers({ ...answers, [q.id]: option });\r\n    if (step < questions.length - 1) {\r\n      setStep(step + 1);\r\n    } else {\r\n      setShowResult(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      {!showResult ? (\r\n        <div className=\"quiz-card\">\r\n          <h2>{questions[step].text}</h2>\r\n          <div className=\"options-grid\">\r\n            {questions[step].options.map((opt, idx) => (\r\n              <button\r\n                key={idx}\r\n                className=\"option-btn\"\r\n                onClick={() => handleAnswer(opt)}\r\n              >\r\n                {opt}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <div className=\"progress\">\r\n            Question {step + 1} of {questions.length}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <TravelResult answers={answers} onClose={() => window.location.reload()} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}