{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HASINI\\\\Desktop\\\\HTML\\\\my\\\\nic-dob-calculator\\\\src\\\\components\\\\TravelScenario.jsx\",\n  _s = $RefreshSig$();\n// src/components/TravelScenario.jsx\nimport React, { useState, useMemo } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport TravelQuiz from \"./travel/TravelQuiz\";\nimport TravelResult from \"./travel/TravelResult\";\nimport \"./TravelScenario.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TravelScenario() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // NICCalculator navigates to /travel with state { birthday, age, gender, persona? }\n  const nicState = location.state || {};\n\n  // If NIC data exists use it, otherwise remain empty and quiz will still run\n  const birthday = nicState.birthday || null;\n  const ageFromNic = nicState.age || null;\n  const gender = nicState.gender || null;\n\n  // persona comes from quiz result (string). If NIC passed persona, it's used as default.\n  const [persona, setPersona] = useState(nicState.persona || null);\n\n  // finalResult holds the object computed by TravelResult (persona + month + ageFlavor + suggestion)\n  const [finalResult, setFinalResult] = useState(null);\n\n  // quick derived values\n  const birthMonth = useMemo(() => birthday ? new Date(birthday).getMonth() + 1 : null, [birthday]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"travel-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"travel-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"travel-head-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\u2708 Find Your Travel Scenario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtitle\",\n          children: \"A playful quiz + your NIC birth month & age make a unique trip \\u2014 try it!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"travel-actions\",\n        children: !birthday && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"ghost\",\n          onClick: () => {\n            // helpful: send user back to home to enter NIC\n            navigate(\"/\");\n          },\n          title: \"Go enter NIC\",\n          children: \"Enter NIC first\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"travel-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"quiz-column\",\n        children: /*#__PURE__*/_jsxDEV(TravelQuiz, {\n          initialPersona: persona,\n          onPersonaSelect: p => {\n            setPersona(p);\n            setFinalResult(null); // clear previous final until user confirms\n          },\n          onFinish: computedPersona => {\n            // computedPersona is string persona from quiz\n            setPersona(computedPersona);\n            // final result will be generated by TravelResult; we still store finalResult if needed\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n        className: \"preview-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"preview-title\",\n          children: \"Live Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TravelResult, {\n          persona: persona,\n          birthMonth: birthMonth,\n          age: ageFromNic,\n          gender: gender,\n          onFinal: payload => setFinalResult(payload),\n          showCTA: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), finalResult && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"final-note\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Finalized:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), \" You can copy the card text for LinkedIn or share it manually.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TravelScenario, \"xIIHtqV4MlLbH30f2Cb14ZTqZsU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = TravelScenario;\nvar _c;\n$RefreshReg$(_c, \"TravelScenario\");","map":{"version":3,"names":["React","useState","useMemo","useLocation","useNavigate","TravelQuiz","TravelResult","jsxDEV","_jsxDEV","TravelScenario","_s","location","navigate","nicState","state","birthday","ageFromNic","age","gender","persona","setPersona","finalResult","setFinalResult","birthMonth","Date","getMonth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","initialPersona","onPersonaSelect","p","onFinish","computedPersona","onFinal","payload","showCTA","_c","$RefreshReg$"],"sources":["C:/Users/HASINI/Desktop/HTML/my/nic-dob-calculator/src/components/TravelScenario.jsx"],"sourcesContent":["// src/components/TravelScenario.jsx\r\nimport React, { useState, useMemo } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport TravelQuiz from \"./travel/TravelQuiz\";\r\nimport TravelResult from \"./travel/TravelResult\";\r\nimport \"./TravelScenario.css\";\r\n\r\nexport default function TravelScenario() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  // NICCalculator navigates to /travel with state { birthday, age, gender, persona? }\r\n  const nicState = location.state || {};\r\n\r\n  // If NIC data exists use it, otherwise remain empty and quiz will still run\r\n  const birthday = nicState.birthday || null;\r\n  const ageFromNic = nicState.age || null;\r\n  const gender = nicState.gender || null;\r\n\r\n  // persona comes from quiz result (string). If NIC passed persona, it's used as default.\r\n  const [persona, setPersona] = useState(nicState.persona || null);\r\n\r\n  // finalResult holds the object computed by TravelResult (persona + month + ageFlavor + suggestion)\r\n  const [finalResult, setFinalResult] = useState(null);\r\n\r\n  // quick derived values\r\n  const birthMonth = useMemo(() => (birthday ? new Date(birthday).getMonth() + 1 : null), [birthday]);\r\n\r\n  return (\r\n    <div className=\"travel-page\">\r\n      <header className=\"travel-header\">\r\n        <div className=\"travel-head-left\">\r\n          <h1>✈ Find Your Travel Scenario</h1>\r\n          <p className=\"subtitle\">A playful quiz + your NIC birth month & age make a unique trip — try it!</p>\r\n        </div>\r\n\r\n        <div className=\"travel-actions\">\r\n          {/* If NIC data not present, show a hint where to go */}\r\n          {!birthday && (\r\n            <button\r\n              className=\"ghost\"\r\n              onClick={() => {\r\n                // helpful: send user back to home to enter NIC\r\n                navigate(\"/\");\r\n              }}\r\n              title=\"Go enter NIC\"\r\n            >\r\n              Enter NIC first\r\n            </button>\r\n          )}\r\n        </div>\r\n      </header>\r\n\r\n      <main className=\"travel-main\">\r\n        <section className=\"quiz-column\">\r\n          <TravelQuiz\r\n            initialPersona={persona}\r\n            onPersonaSelect={(p) => {\r\n              setPersona(p);\r\n              setFinalResult(null); // clear previous final until user confirms\r\n            }}\r\n            onFinish={(computedPersona) => {\r\n              // computedPersona is string persona from quiz\r\n              setPersona(computedPersona);\r\n              // final result will be generated by TravelResult; we still store finalResult if needed\r\n            }}\r\n          />\r\n        </section>\r\n\r\n        <aside className=\"preview-column\">\r\n          <h3 className=\"preview-title\">Live Preview</h3>\r\n\r\n          <TravelResult\r\n            persona={persona}\r\n            birthMonth={birthMonth}\r\n            age={ageFromNic}\r\n            gender={gender}\r\n            onFinal={(payload) => setFinalResult(payload)}\r\n            showCTA={true}\r\n          />\r\n\r\n          {finalResult && (\r\n            <div className=\"final-note\">\r\n              <strong>Finalized:</strong> You can copy the card text for LinkedIn or share it manually.\r\n            </div>\r\n          )}\r\n        </aside>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}